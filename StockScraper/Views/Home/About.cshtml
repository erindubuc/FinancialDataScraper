@{
    ViewBag.Title = "About";
}


<h2>About This Project</h2>
<br />
<h3>Overview:</h3>
<div class="container">
    <p class="about">
        This scraper project was broken down into four, one-week, phases that were modeled after an
        Agile approach.  I began each day with a whiteboard meeting to recap what was working within
        each phase, and to provide myself with reasonable goals to meet for the day.  I believe that this
        routine successfully kept me on track by maintaining accountability in order to meet the required deadlines.
    </p>

    <p>
        The first goal in creating this financial data scraper was to configure a Yahoo account with a stock portfolio.
        After setting up an account, I created a console application using Selenium and Chromedriver that
        scraped specific stock data from my portfolio, and then printed it to the console.  The trickiest part here was
        figuring out how to parse each stock's information appropriately.  Ultimately, manipulating each row from the stock
        table and finding out where/if newline feeds existed, helped me to parse this data correctly.  I have to admit, it was
        AMAZING to see the console firing off each stock's data for the first time!
    </p>

    <p>
        The next phase included creating a SQL database which I did within Visual Studio, using the SQL Server Object
        Explorer. I created two table schemas with pertinent column names, datatypes, as well as primary and foreign keys,
        acknowledging the fact that performing any operational mathematics on the data would be unnecessary.  I found that
        creating a separate class for the database was crucial for separating the concerns within my code.
    </p>

    <p>
        Once these phases were completed, I created an ASP.Net MVC Web application with a database first approach.  This seemed
        to be the best route as I already had a well configured database holding my stock data.  This application allows
        authenticated users to access the stock portfolio and to perform a "scrape" in order to get the most up-to-date stock
        data.  I integrated my console scraping application by reusing the WebDriver, User, and Database classes.
    </p>
</div>
<h3>Technologies I Used:</h3>

<ul>
    <li>Selenium</li>
    <li>ChromeDriver</li>
    <li>MS SQL</li>
    <li>Transact-SQL</li>
    <li>ASP.Net MVC</li>
</ul>